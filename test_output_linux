Cloning into bare repository 'remote/r-tutorial.git'...
Cloning into bare repository 'remote/aufgabe1.git'...
Cloning into bare repository 'remote/aufgabe2.git'...
Cloning into bare repository 'remote/aufgabe3.git'...
Cloning into aufgabe2...
done.
Initialized empty Git repository in test/serie1/.git/
Cloning into 'aufgabe1'...
done.
Cloning into 'aufgabe2'...
done.
[master (root-commit) e660380] first commit
 3 files changed, 8 insertions(+)
 create mode 100644 .gitmodules
 create mode 160000 aufgabe1
 create mode 160000 aufgabe2
 create mode 100644 series1.tex
 create mode 100644 solution1.tex
Cloning into bare repository 'remote/serie1.git'...
done.
Everything up-to-date
Branch master set up to track remote branch master from origin.
Initialized empty Git repository in test/serie2/.git/
Cloning into 'aufgabe1'...
done.
Cloning into 'aufgabe2'...
done.
[master (root-commit) 673e4a7] first commit
 3 files changed, 8 insertions(+)
 create mode 100644 .gitmodules
 create mode 160000 aufgabe1
 create mode 160000 aufgabe2
 create mode 100644 series2.tex
 create mode 100644 solution2.tex
Cloning into bare repository 'remote/serie2.git'...
done.
Everything up-to-date
Branch master set up to track remote branch master from origin.
Initialized empty Git repository in test/vorlesung/.git/
Cloning into 'serie1'...
done.
Cloning into 'serie2'...
done.
Cloning into 'r-tutorial'...
done.
[master (root-commit) 878f454] first commit
 4 files changed, 12 insertions(+)
 create mode 100644 .gitmodules
 create mode 100644 README
 create mode 160000 r-tutorial
 create mode 160000 serie1
 create mode 160000 serie2
Cloning into bare repository 'remote/vorlesung.git'...
done.
To test/remote/vorlesung.git
 * [new tag]         state-0 -> state-0
Cloning into vorlesung...
done.
Attaching heads of submodules...
done.
Cloning into vorlesung2...
done.
Attaching heads of submodules...
done.
Cloning into vorlesung3...
done.
Attaching heads of submodules...
done.
[master 53824e5] This is no problem
 1 file changed, 1 insertion(+)
Warning in test/vorlesung2/r-tutorial:
 Unstaged changes to files under version control.
 To add, use option -a to stage or add files manually with git add <file>.
Warning in test/vorlesung2/serie1/aufgabe1:
 Unstaged changes to files under version control.
 To add, use option -a to stage or add files manually with git add <file>.
Warning in test/vorlesung2/serie1:
 Unstaged changes to files under version control.
 To add, use option -a to stage or add files manually with git add <file>.
Committing in test/vorlesung2/r-tutorial...
Committing in test/vorlesung2/serie1/aufgabe1...
Committing in test/vorlesung2/serie1...
Committing in test/vorlesung2...
Pushing test/vorlesung2/r-tutorial.
Pushing test/vorlesung2/serie1/aufgabe1.
Pushing test/vorlesung2/serie1/aufgabe2.
Pushing test/vorlesung2/serie1.
Pushing test/vorlesung2.
To test/remote/vorlesung.git
 * [new tag]         state-1 -> state-1
From test/remote/vorlesung
   878f454..a5c9186  master     -> origin/master
 * [new tag]         state-1    -> state-1
Fetching submodule r-tutorial
From test/remote/r-tutorial
   905d4fc..af5731f  master     -> origin/master
Fetching submodule serie1
From test/remote/serie1
   e660380..b4858e0  master     -> origin/master
Fetching submodule serie1/aufgabe1
From test/remote/aufgabe1
   60214c8..6109dae  master     -> origin/master
Fetching submodule serie1/aufgabe2
From test/remote/aufgabe2
   97d8f57..53824e5  master     -> origin/master
Updating 878f454..a5c9186
Fast-forward
 r-tutorial |    2 +-
 serie1     |    2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)
There are updates available for serie2/aufgabe1.
Fetched updates. Now use "git rdiff" to show the differing files. 
Then "git rpull" in the correct folder to merge updates.
Cloning into vorlesung4...
done.
Attaching heads of submodules...
Warning in test/vorlesung4/serie2/aufgabe1: 
 Cannot attach HEAD. There are probably unmerged updates available. 
 Go ("cd") there and use "git branch -v" list available branches. 
 Switch branches with "git checkout <branchname>".
done.
There are updates available for the current repository.
There are updates available for r-tutorial.
There are updates available for serie1.
There are updates available for serie1/aufgabe1.
There are updates available for serie1/aufgabe2.
There are updates available for serie2/aufgabe1.
Use "git rfetch" to fetch updates.
Then go to the innermost submodules and use "git rpull" to merge the updates.
Error in test/vorlesung3:
 There are unstaged changes. Use "git add <file>" to add.
rpull failed, as required.
Error in test/vorlesung3:
 There are unstaged changes. Use "git add <file>" to add.
rpush failed, as required
Committing in test/vorlesung3/r-tutorial...
Committing in test/vorlesung3/serie2/aufgabe1...
Committing in test/vorlesung3/serie2...
Committing in test/vorlesung3...
Pushing test/vorlesung3/r-tutorial.
To test/remote/r-tutorial.git
 ! [rejected]        master -> master (non-fast-forward)
error: failed to push some refs to 'test/remote/r-tutorial.git'
To prevent you from losing history, non-fast-forward updates were rejected
Merge the remote changes (e.g. 'git pull') before pushing again.  See the
'Note about fast-forwards' section of 'git push --help' for details.
Stopping at 'r-tutorial'; script returned non-zero status.
rpush failed, as required.
 Error: Unpushed commits in submodules.
 In test/vorlesung3/r-tutorial:
    Branch "master" is ahead 1 commit(s).
 In test/vorlesung3/serie2:
    Branch "master" is ahead 1 commit(s).
 In test/vorlesung3/serie2/aufgabe1:
    Branch "master" is ahead 1 commit(s).
  Try "git rpush" followed by another "git rpull". If that fails, 
  push them one-by-one before pulling again. 
  This safety measure ensures that no commits get lost.
rpull failed, as required.
There are updates available for the current repository.
There are updates available for r-tutorial.
There are updates available for serie1.
There are updates available for serie1/aufgabe1.
There are updates available for serie1/aufgabe2.
There are updates available for serie2/aufgabe1.
Fetched updates. Now use "git rdiff" to show the differing files. 
Then "git rpull" in the correct folder to merge updates.
 Error: Unpushed commits in submodules.
 In test/vorlesung3/r-tutorial:
    Branch "master" is ahead 1, behind 1 commit(s).
 In test/vorlesung3/serie2:
    Branch "master" is ahead 1 commit(s).
 In test/vorlesung3/serie2/aufgabe1:
    Branch "master" is ahead 1, behind 1 commit(s).
  Try "git rpush" followed by another "git rpull". If that fails, 
  push them one-by-one before pulling again. 
  This safety measure ensures that no commits get lost.
rpull failed, as required.
Pushing test/vorlesung3/r-tutorial.
To test/remote/r-tutorial.git
 ! [rejected]        master -> master (non-fast-forward)
error: failed to push some refs to 'test/remote/r-tutorial.git'
To prevent you from losing history, non-fast-forward updates were rejected
Merge the remote changes (e.g. 'git pull') before pushing again.  See the
'Note about fast-forwards' section of 'git push --help' for details.
Stopping at 'r-tutorial'; script returned non-zero status.
rpush failed, as required.
Diff in test/vorlesung3/r-tutorial:
  tutorial.Rnw |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
Diff in test/vorlesung3/serie1/aufgabe1:
  ex.Rnw |    1 +
 1 file changed, 1 insertion(+)
Diff in test/vorlesung3/serie1/aufgabe2:
  ex.Rnw |    1 +
 1 file changed, 1 insertion(+)
Diff in test/vorlesung3/serie2/aufgabe1:
  ex.Rnw |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
Auto-merging tutorial.Rnw
CONFLICT (content): Merge conflict in tutorial.Rnw
Automatic merge failed; fix conflicts and then commit the result.
Updating 60214c8..6109dae
Fast-forward
 ex.Rnw |    1 +
 1 file changed, 1 insertion(+)
Updating 97d8f57..53824e5
Fast-forward
 ex.Rnw |    1 +
 1 file changed, 1 insertion(+)
Auto-merging ex.Rnw
CONFLICT (content): Merge conflict in ex.Rnw
Automatic merge failed; fix conflicts and then commit the result.
Committing in test/vorlesung3/r-tutorial...
Committing in test/vorlesung3/serie1...
Converging local and remote...
done.
Committing in test/vorlesung3/serie2/aufgabe1...
Committing in test/vorlesung3/serie2...
Committing in test/vorlesung3...
Converging local and remote...
done.
Pushing test/vorlesung3/r-tutorial.
Pushing test/vorlesung3/serie1.
Pushing test/vorlesung3/serie2/aufgabe1.
Pushing test/vorlesung3/serie2.
Pushing test/vorlesung3.
 Warning: Untracked files in submodules. Add them to .gitignore
  in the respective submodules or remove them.
  Use "git status" to see where they are.
  Continuing anyway...
From test/remote/vorlesung
   a5c9186..908c79f  master     -> origin/master
Fetching submodule r-tutorial
From test/remote/r-tutorial
   af5731f..c2271f6  master     -> origin/master
Fetching submodule serie1
From test/remote/serie1
   b4858e0..d862cb8  master     -> origin/master
Fetching submodule serie2
From test/remote/serie2
   673e4a7..b6e249f  master     -> origin/master
Fetching submodule serie2/aufgabe1
From test/remote/aufgabe2
   53824e5..8f16190  master     -> origin/master
Updating a5c9186..908c79f
Fast-forward
 r-tutorial |    2 +-
 serie1     |    2 +-
 serie2     |    2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)
There are updates available for serie1/aufgabe2.
Fetched updates. Now use "git rdiff" to show the differing files. 
Then "git rpull" in the correct folder to merge updates.
Diff in test/vorlesung/serie1/aufgabe2:
  ex.Rnw |    3 ---
 1 file changed, 3 deletions(-)
Updating 53824e5..8f16190
Fast-forward
 ex.Rnw |    3 ---
 1 file changed, 3 deletions(-)
Committing in test/vorlesung/serie1...
Committing in test/vorlesung...
Pushing test/vorlesung/serie1.
Pushing test/vorlesung.
From test/remote/vorlesung
   a5c9186..447056e  master     -> origin/master
Fetching submodule r-tutorial
From test/remote/r-tutorial
   af5731f..c2271f6  master     -> origin/master
Fetching submodule serie1
From test/remote/serie1
   b4858e0..fff6421  master     -> origin/master
Fetching submodule serie1/aufgabe2
From test/remote/aufgabe2
   53824e5..8f16190  master     -> origin/master
Fetching submodule serie2
From test/remote/serie2
   673e4a7..b6e249f  master     -> origin/master
Fetching submodule serie2/aufgabe1
From test/remote/aufgabe2
   97d8f57..8f16190  master     -> origin/master
Updating a5c9186..447056e
Fast-forward
 r-tutorial |    2 +-
 serie1     |    2 +-
 serie2     |    2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)
To test/remote/vorlesung.git
 * [new tag]         state-2 -> state-2
state-0
state-1
state-2
Note: checking out 'state-1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a5c9186... I did something
M	r-tutorial
M	serie1
M	serie2
Previous HEAD position was a5c9186... I did something
HEAD is now at 878f454... first commit
M	r-tutorial
M	serie1
Error in test/vorlesung2/r-tutorial:
 Refused to commit in detached head state. 
 Use "git rcheckout <branchname>" to attach HEAD. 
 List branches with "git branch -v".
Stopping at 'r-tutorial'; script returned non-zero status.
rcommit failed as it should have
Error in test/vorlesung2:
 There is modified content in submodules.
rcheckout failed as it should have
HEAD is now at 905d4fc I did something
Previous HEAD position was 878f454... first commit
HEAD is now at 447056e... updated serie1/aufgabe2
M	r-tutorial
M	serie1
M	serie2
Error in test/vorlesung2/serie2/aufgabe2:
 There are untracked files not in .gitignore. Try "make clean" to remove temporary files.
rm-submodule failed as it should have
Switched to a new branch 'testbranch'
[testbranch 24ad2ee] catch this!
 1 file changed, 1 insertion(+)
 create mode 100644 hallo
Switched to branch 'master'
Error in test/vorlesung2/serie2/aufgabe2:
 testbranch is not a remote tracking branch and is not fully merged any tracking branch.
rm-submodule caught non-tracking-branch
Updating 4169dd3..24ad2ee
Fast-forward
 hallo |    1 +
 1 file changed, 1 insertion(+)
 create mode 100644 hallo
To test/remote/aufgabe3.git
   4169dd3..24ad2ee  master -> master
rm 'aufgabe2'
[master 2bd5d08] removed submodule "aufgabe2" (url: test/remote/aufgabe3.git)
 2 files changed, 4 deletions(-)
 delete mode 160000 aufgabe2
Committing in test/vorlesung2...
Note: checking out 'state-2'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 447056e... updated serie1/aufgabe2
M	serie2
Previous HEAD position was 447056e... updated serie1/aufgabe2
Switched to branch 'master'
M	serie2
Your branch is ahead of 'origin/master' by 1 commit.
warning: unable to rmdir aufgabe2: Directory not empty
Pushing test/vorlesung2/serie2.
Pushing test/vorlesung2.
There are updates available for the current repository.
There are updates available for serie1.
There are updates available for serie1/aufgabe2.
There are updates available for serie2.
There are updates available for serie2/aufgabe2.
Use "git rfetch" to fetch updates.
Then go to the innermost submodules and use "git rpull" to merge the updates.
From test/remote/aufgabe3
   4169dd3..24ad2ee  master     -> origin/master
Updating 4169dd3..24ad2ee
Fast-forward
 hallo |    1 +
 1 file changed, 1 insertion(+)
 create mode 100644 hallo
Committing in test/vorlesung3/serie2...
Committing in test/vorlesung3...
 Error: Unpushed commits in submodules.
 In test/vorlesung3/serie2:
    Branch "master" is ahead 1 commit(s).
  Try "git rpush" followed by another "git rpull". If that fails, 
  push them one-by-one before pulling again. 
  This safety measure ensures that no commits get lost.
This fails as it should
Pushing test/vorlesung3/serie2.
To test/remote/serie2.git
 ! [rejected]        master -> master (non-fast-forward)
error: failed to push some refs to 'test/remote/serie2.git'
To prevent you from losing history, non-fast-forward updates were rejected
Merge the remote changes (e.g. 'git pull') before pushing again.  See the
'Note about fast-forwards' section of 'git push --help' for details.
Stopping at 'serie2'; script returned non-zero status.
This pushes the second level, but then fails
There are updates available for the current repository.
There are updates available for serie1.
There are updates available for serie1/aufgabe2.
There are updates available for serie2.
Use "git rfetch" to fetch updates.
Then go to the innermost submodules and use "git rpull" to merge the updates.
There are updates available for the current repository.
There are updates available for serie1.
There are updates available for serie1/aufgabe2.
There are updates available for serie2.
Fetched updates. Now use "git rdiff" to show the differing files. 
Then "git rpull" in the correct folder to merge updates.
Diff in test/vorlesung3/serie1/aufgabe2:
  ex.Rnw |    3 ---
 1 file changed, 3 deletions(-)
Diff in test/vorlesung3/serie2:
  .gitmodules |    3 ---
 1 file changed, 3 deletions(-)
Converging local and remote...
Removing submodule "aufgabe2" dropped in remote.
Issue "git submodule add test/remote/aufgabe3.git aufgabe2" to add it again.
rm 'aufgabe2'
Committing in test/vorlesung3/serie2...
done.
Committing in test/vorlesung3...
Converging local and remote...
done.
Pushing test/vorlesung3/serie2.
Pushing test/vorlesung3.
To test/remote/vorlesung.git
 * [new tag]         state-3 -> state-3
Converging local and remote...
Removing submodule "aufgabe2" dropped in remote.
Issue "git submodule add test/remote/aufgabe3.git aufgabe2" to add it again.
rm 'aufgabe2'
Committing in test/vorlesung3a/serie2...
done.
Committing in test/vorlesung3a...
Converging local and remote...
done.
There are updates available for the current repository.
There are updates available for serie2.
Use "git rfetch" to fetch updates.
Then go to the innermost submodules and use "git rpull" to merge the updates.
Cloning into 'aufgabe2'...
done.
[master 87001f3] added aufgabe1.git as aufgabe2
 2 files changed, 4 insertions(+)
 create mode 160000 aufgabe2
Committing in test/vorlesung2...
Pushing test/vorlesung2/serie2.
To test/remote/serie2.git
 ! [rejected]        master -> master (non-fast-forward)
error: failed to push some refs to 'test/remote/serie2.git'
To prevent you from losing history, non-fast-forward updates were rejected
Merge the remote changes (e.g. 'git pull') before pushing again.  See the
'Note about fast-forwards' section of 'git push --help' for details.
Stopping at 'serie2'; script returned non-zero status.
Ok, there was an error in serie2
There are updates available for the current repository.
There are updates available for serie2.
Fetched updates. Now use "git rdiff" to show the differing files. 
Then "git rpull" in the correct folder to merge updates.
Notice in test/vorlesung2/serie2:
 Not converging, use "git converge-submodules -f" if necessary
Converging local and remote...
Already up-to-date!
done.
Committing in test/vorlesung2...
Converging local and remote...
done.
There are updates available for the current repository.
There are updates available for serie2.
There are updates available for serie2/aufgabe2.
Use "git rfetch" to fetch updates.
Then go to the innermost submodules and use "git rpull" to merge the updates.
rm 'aufgabe2'
[master 1246d70] removed submodule "aufgabe2" (url: test/remote/aufgabe3.git)
 2 files changed, 4 deletions(-)
 delete mode 160000 aufgabe2
Cloning into 'aufgabe2'...
done.
[master 8ef9cb4] added aufgabe1.git as aufgabe2
 2 files changed, 4 insertions(+)
 create mode 160000 aufgabe2
Committing in test/vorlesung...
Pushing test/vorlesung/serie2.
To test/remote/serie2.git
 ! [rejected]        master -> master (non-fast-forward)
error: failed to push some refs to 'test/remote/serie2.git'
To prevent you from losing history, non-fast-forward updates were rejected
Merge the remote changes (e.g. 'git pull') before pushing again.  See the
'Note about fast-forwards' section of 'git push --help' for details.
Stopping at 'serie2'; script returned non-zero status.
Ok, there was an error in serie2
There are updates available for the current repository.
There are updates available for serie2.
Fetched updates. Now use "git rdiff" to show the differing files. 
Then "git rpull" in the correct folder to merge updates.
Converging local and remote...
Removing submodule "aufgabe2" dropped in remote.
Issue "git submodule add test/remote/aufgabe1.git aufgabe2" to add it again.
rm 'aufgabe2'
Committing in test/vorlesung/serie2...
done.
Cloning into 'aufgabe2'...
done.
Committing in test/vorlesung/serie2...
Committing in test/vorlesung...
Converging local and remote...
done.
Pushing test/vorlesung/serie2.
Pushing test/vorlesung.
There are updates available for the current repository.
There are updates available for serie2.
Use "git rfetch" to fetch updates.
Then go to the innermost submodules and use "git rpull" to merge the updates.
Cloning into 'aufgabe2'...
done.
Cloning into 'aufgabe3'...
done.
[master 4874e92] added aufgabe1.git as aufgabe2, aufgabe3.git as aufgabe3
 3 files changed, 8 insertions(+)
 create mode 160000 aufgabe2
 create mode 160000 aufgabe3
Committing in test/vorlesung3...
There are updates available for the current repository.
There are updates available for serie2.
Fetched updates. Now use "git rdiff" to show the differing files. 
Then "git rpull" in the correct folder to merge updates.
Converging local and remote...
done.
Committing in test/vorlesung3...
Converging local and remote...
done.
Pushing test/vorlesung3/serie2.
Pushing test/vorlesung3.
From test/remote/vorlesung
   2c60b3c..c1687a5  master     -> origin/master
Fetching submodule serie2
From test/remote/serie2
   a74481a..064069e  master     -> origin/master
Updating 2c60b3c..c1687a5
Fast-forward
 serie2 |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
warning: unable to rmdir aufgabe3: Directory not empty
Branch alternative set up to track remote branch alternative from origin.
Switched to branch 'alternative'
Committing in test/vorlesung/serie2...
Committing in test/vorlesung...
HEAD is now at ba956c4 some message
Committing in test/vorlesung3/serie2...
Committing in test/vorlesung3...
Pushing test/vorlesung3/serie2.
Pushing test/vorlesung3.
There are updates available for the current repository.
There are updates available for serie2.
Fetched updates. Now use "git rdiff" to show the differing files. 
Then "git rpull" in the correct folder to merge updates.
Converging local and remote...
warning: Failed to merge submodule aufgabe1 (commits don't follow merge-base)
Auto-merging aufgabe1
CONFLICT (submodule): Merge conflict in aufgabe1
Automatic merge failed; fix conflicts and then commit the result.
done.
Committing in test/vorlesung...
Converging local and remote...
done.
Pushing test/vorlesung/serie2.
Pushing test/vorlesung.
From test/remote/vorlesung
   69550e4..fa85373  master     -> origin/master
Fetching submodule serie2
From test/remote/serie2
   8c07aa8..6aee4c6  master     -> origin/master
Updating 69550e4..fa85373
Fast-forward
 serie2 |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
Error: "serie2" exists already. Remove it first.
Ok series2 exists already
rm 'serie2'
Cloning into 'serie3'...
done.
[master 547b872] moved submodule "serie2" to "serie3" (url: test/remote/serie2.git)
 2 files changed, 3 insertions(+), 3 deletions(-)
 rename serie2 => serie3 (100%)
rm 'serie3'
Cloning into 'serie2'...
done.
[master 1b9d38f] moved submodule "serie3" to "serie2" (url: test/remote/serie2.git)
 2 files changed, 2 insertions(+), 2 deletions(-)
 rename serie3 => serie2 (100%)
Cloning into bare repository 'aufgabe4.git'...
done.
Cloning into 'aufgabe1'...
done.
[master 38c6724] first time adding more content to aufgabe1
 1 file changed, 1 insertion(+)
[master 723c141] second time adding more content to aufgabe1
 1 file changed, 1 insertion(+)
To test/remote/aufgabe1.git
   6109dae..723c141  master -> master
Cloning into 'aufgabe4'...
done.
[master ae0c625] first time adding more content to aufgabe4
 1 file changed, 1 insertion(+)
[master 42f5541] second time adding more content to aufgabe4
 1 file changed, 1 insertion(+)
To test/remote/aufgabe4.git
   6109dae..42f5541  master -> master
Cloning into vorlesung5...
done.
Attaching heads of submodules...
Warning in test/vorlesung5/serie1/aufgabe1: 
 Cannot attach HEAD. There are probably unmerged updates available. 
 Go ("cd") there and use "git branch -v" list available branches. 
 Switch branches with "git checkout <branchname>".
Warning in test/vorlesung5/serie2/aufgabe2: 
 Cannot attach HEAD. There are probably unmerged updates available. 
 Go ("cd") there and use "git branch -v" list available branches. 
 Switch branches with "git checkout <branchname>".
done.
Cloning into vorlesung6...
done.
Attaching heads of submodules...
Warning in test/vorlesung6/serie1/aufgabe1: 
 Cannot attach HEAD. There are probably unmerged updates available. 
 Go ("cd") there and use "git branch -v" list available branches. 
 Switch branches with "git checkout <branchname>".
Warning in test/vorlesung6/serie2/aufgabe2: 
 Cannot attach HEAD. There are probably unmerged updates available. 
 Go ("cd") there and use "git branch -v" list available branches. 
 Switch branches with "git checkout <branchname>".
done.
Already up-to-date.
Warning: you are leaving 5 commits behind, not connected to
any of your branches:

  6109dae I did something
  60214c8 this is aufgabe1
  79e0e79 Added series2 and removed series1/aufgabe2
  fbb609e I did something
  8e0b5d1 first commit

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch new_branch_name 6109daeb116d540cf8f826befc6e96dd0083cf2b

Switched to branch 'master'
Committing in test/vorlesung5/serie1...
Committing in test/vorlesung5...
Warning in test/vorlesung5/serie2/aufgabe2:
 Detached head. This probably just mean that there are updates available
 that are not yet used. To update to the most recent version, use 
   git checkout <branchname> 
 To list all branches, use 
   git branch -a 
 Alternatively try to use "git attach-head" or "git rpull" to update submodule.
Pushing test/vorlesung5/serie1.
Pushing test/vorlesung5.
From test/remote/vorlesung
   fa85373..807eaa7  master     -> origin/master
Fetching submodule serie1
From test/remote/serie1
   fff6421..0e7a982  master     -> origin/master
Updating fa85373..807eaa7
Fast-forward
 serie1 |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
rm 'aufgabe1'
[master affc7d6] removed submodule "aufgabe1" (url: test/remote/aufgabe1.git)
 2 files changed, 4 deletions(-)
 delete mode 160000 aufgabe1
Cloning into 'aufgabe1'...
done.
Committing in test/vorlesung6/serie1...
Committing in test/vorlesung6...
Warning in test/vorlesung6/serie2/aufgabe2:
 Detached head. This probably just mean that there are updates available
 that are not yet used. To update to the most recent version, use 
   git checkout <branchname> 
 To list all branches, use 
   git branch -a 
 Alternatively try to use "git attach-head" or "git rpull" to update submodule.
Pushing test/vorlesung6/serie1.
Pushing test/vorlesung6.
From test/remote/vorlesung
   807eaa7..3458e4c  master     -> origin/master
Fetching submodule serie1
From test/remote/serie1
   0e7a982..3603c3a  master     -> origin/master
Updating 807eaa7..3458e4c
Fast-forward
 serie1 |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
* master                42f5541 second time adding more content to aufgabe4
  remotes/origin/HEAD   -> origin/master
  remotes/origin/master 42f5541 second time adding more content to aufgabe4
