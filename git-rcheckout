#!/bin/bash -e
## Do a recursive checkout
## this includes removing orphaned directories
## and attaching heads.

## read input, display help if necessary
if [[ "$@" == "" || "$@" == *--help* ]]; then
    cat<<EOF
 This command is like git-checkout, but acts recursively, i.e.,
 makes sure that the submodules are at the correct commit, 
 their HEADs are attached if possible and orphaned submodule
 directories are removed.

 Usage:
    git rcheckout ...

    ...: same arguments as git-checkout
EOF
    exit 0;
fi

## check for modified content and uncommitted changes
git check-clean || exit 1

## do the checkout
## git pull --recurse-submodules (does not work)
git checkout --quiet "$@" || exit 1
## initialize submodules: cannot combine --init with --merge!!
git submodule --quiet update --init --recursive 2>/dev/null >/dev/null || exit 1
## remove old submodule directories: 
## this is more or less safe, since only ignored files might be deleted
git submodule --quiet foreach git rm-orphaned-submodule-dirs || exit 1
git rm-orphaned-submodule-dirs || exit 1
## attach heads if possible
git submodule --quiet foreach --recursive git attach-head
git attach-head