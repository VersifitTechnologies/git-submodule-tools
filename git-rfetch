#!/bin/bash -e
## Check for updates, does a fetch (dry-run) and reports
## the changes. This is just for convenience.
## Argument --dry-run just runs fetch --dry-run

if [[ "$1" ]]; then
    if [[ "$1" == "--dry-run" ]]; then
	dryrun="--dry-run"
    else 
	echo "Error: rfetch does only accept the argument --dry-run,
    nothing else."
    fi
fi

## check the super repository
if [[ $(git fetch $dryrun 2>&1) != '' ]]; then
    output="There are updates available for the current repository.
"
fi

## check the submodules
if [ -f .gitmodules ]; then
    tmp=`git submodule foreach --recursive git fetch $dryrun 2>&1`
    while read line; do
        ## Ok, just check line by line
        ## This looks like...
        ## Entering 'r-tutorial'
        ## Entering 'serie1'
        ## Entering 'serie1/aufgabe1'
        ## Entering 'serie1/aufgabe2'
        ## ...if there is nothing to fetch
	if [[ "${line:0:10}" == "Entering '" ]]; then
	    lline=${line:10:$((${#line}-11))}
	    printed=0
	    ##echo "$lline"
	else
	    if [[ $printed -eq 0 ]]; then
		output="${output}There are updates available for $lline.
"
		printed=1
	    fi
	fi	
    done <<< "$tmp"
fi


if [[ "$output" ]]; then
    echo -n "$output"
    if [[ "$dryrun" == "--dry-run" ]]; then
	echo "Use \"git rfetch\" to fetch updates."
	echo "Then go to the innermost submodules and use git pull to merge the updates."
    else
	echo "Fetched updates. Now use \"git rdiff\" to show the differing files. Then \"git pull\" in the correct folder to merge updates."
    fi
fi